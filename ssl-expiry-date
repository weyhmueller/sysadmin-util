#!/bin/sh
#
# About
# -----
# Check the expiry date of the SSL certificate on the given host.
# Inform the user about potential problems due to SHA1 phase-out.
#
#
# License
# -------
#
# Copyright (c) 2013 by Steve Kemp.  All rights reserved.
#
# This script is free software; you can redistribute it and/or modify it under
# the same terms as Perl itself.
#
# The LICENSE file contains the full text of the license.
#
#


#
#  Get the name to test
#
name=$1

if [ -z "$name" ]; then
   echo "Usage: $0 some.host.name [portnumber|servicename]"
   exit 3
fi

#
#  Get ssl port or set default to https
#
port=${2}

if [ -z "$port" ]; then
   port=443
fi



#
#
#
if ( ! which openssl >/dev/null 2>/dev/null );  then
   echo "You do not have the 'openssl' tool installed"
   exit 2
fi


#
#  Make a temporary file
#
# Test if we have BSD or GNU version of mktemp
if ( strings $(which mktemp) | grep -q GNU); then
   #We have the GNU version
   tmp=$(mktemp)
else
  #We have the BSD version
   tmp=$(mktemp -t tmp)
fi


#
#  Download the certificate
#
if ( ! echo "" | openssl s_client -connect $name:$port -servername $name> $tmp 2>/dev/null ); then
   echo "Failed to get cert from https://$name:$port/"
   exit 3
fi


#
#  Get the expiry date
#
date=$(openssl x509 -in "$tmp" -noout -enddate | awk -F= '{print $2}')


#
#  Get the Certificate Signature Algorithm
#
algorithm=$(openssl x509 -in "$tmp" -noout -text | grep "Signature" | head -1 | awk -F: '{gsub(/^ /, "", $2);print $2}')

#
#  Remove the temporary file
#
rm -f "$tmp"


#
#  Convert the expiry date + todays date to seconds-past epoch
#
# Check if we have the BSD or the GNU version of date
if (strings $(which date) | grep -q GNU); then
  # We have GNU this is easy
  then=$(date --date "$date" +%s)
else
  # We have BSD now it is getting complicated
  year=$(echo $date | awk '{print $4}')
  month=$(echo $date | awk '{print $1}')
  day=$(echo $date | awk '{print $2}')
  hour=$(echo $date | awk '{print $3}' | awk -F: '{print $1}')
  minute=$(echo $date | awk '{print $3}' | awk -F: '{print $2}')
  second=$(echo $date | awk '{print $3}' | awk -F: '{print $3}')
  then=$(date -v${year}y -v${month} -v${day}d -v${hour}H -v${minute}M -v${second}S -u +%s)
fi

now=$(date +%s)

#
#  Day diff
#
diff=$(expr "$then" - "$now" )
diff=$(expr $diff / 86400 )

#
#  Check if SHA1 && certificate expiry date after Jan 1 2016 #insecure, no user action required
#  Check if SHA1 && certificate expiry date after Jan 1 2017 #insecure, mixed content (user action required)
#

date1="1451602800" # Jan 1 2016
date2="1483225200" # Jan 1 2017
sha1prob="no"

if [ "$algorithm" == "sha1WithRSAEncryption" ]; then
  if [ $then -gt $date1 ]; then
    sha1prob="WARN: The Certificate is signed with SHA1 and expires after Jan 1, 2016\nCertificate will be rendered invalid in Chrome 39"
    if [ $then -gt $date2 ]; then
      sha1prob="CRIT: The Certificate is signed with SHA1 and expires after Jan 1, 2017\nCertificate will be rendered invalid in Chrome 39. User Interaction required!"
    fi
  fi
fi

#
#  All done
#
echo "Certificate presented at : $name"
echo "Expires: $date  [$diff days in the future]"

if [ "$sha1prob" != "no" ]; then
  echo "$sha1prob"
fi
